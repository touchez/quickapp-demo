<template>
  <div class="map-container">
    <map class="map" id="map" markers="{{markers}}" latitude="{{latitude}}" longitude="{{longitude}}" scale="18" showmylocation="true"></map>
    <div class="map-topbar">
      <text class="tips">手动合上车锁即可完成还车，结束计费</text>
      <div class="statebar">
        <text class="statebar-item">{{distance}}米\n骑行距离</text>
        <text class="statebar-item">{{time}}\n骑行时间</text>
        <div class="btn-box">
          <input type="button" class="btn" value="{{lock}}" @click="clickLock" />
        </div>
      </div>
      <div class="statebar2">
        <text class="bar2-text">单车：{{id}}</text>
        <text class="bar2-text">预计：￥{{price}}元</text>
      </div>
    </div>
  </div>
</template>
<style>
.map {
  width: 100%;
  height: 100%;
}
.map-topbar {
  position: fixed;
  width: 100%;
  display: flex;
  flex-direction: column;
  background-color: #ffffff;
  height: 250px;
}
.tips {
  height: 100px;
  text-align: center;
  border-bottom: 1px solid #eeeeee;
}
.statebar {
  display: flex;
  justify-content: space-between;
  height: 100%;
}
.statebar-item {
  text-align: center;
  width: 32%;
  height: 100%;
}
.btn-box {
  width: 32%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}
.btn {
  background-color: #f8f8f8;
  height: 80px;
  width: 120px;
  text-align: center;
}
text {
  color: #000000;
}
.statebar2 {
  display: flex;
  justify-content: space-between;
  background-color: #f0504f;
  height: 100px;
  padding: 0 20px;
}
.bar2-text {
  color: #ffffff;
}
</style>
<script>
import prompt from '@system.prompt'
import router from '@system.router'
export default {
  private: {
    latitude: '26.860006',
    longitude: '100.225946',
    distance: '0',
    time: '0min',
    lock: '上锁',
    id: '2220021212',
    price: '1',
    startTime: '',
    endTime: '',
    intervel: '',
    markers: [{
      latitude: '26.860006',
      longitude: '100.225946',
      iconPath: 'https://doc.quickapp.cn/assets/images/logo.png'
    }]
  },
  getLocation() {
    let that = this
    // 移动到当前定位点
    this.$element('map').moveToMyLocation()
    // 获取中心点坐标，设置延时等待地图移动到我的位置即可获取我的位置坐标
    setTimeout(() => {
      this.$element('map').getCenterLocation({
        success(res) {
          prompt.showToast({
            message: `获取当前坐标成功`
          })
          that.latitude = res.latitude
          that.longitude = res.longitude
        },
        fail(reason) {
          prompt.showToast({
            message: `获取失败，reason = ${reason}`
          })
        },
        complete() {
          console.info('complete')
        }
      })
    }, 1000)
  },
  clickLock() {
    this.endTime = new Date().getTime()
    clearInterval(this.intervel)
    router.push ({
      uri: '/PayPage',
      params: {
        duration: Math.floor(((this.endTime - this.startTime) % (1000 * 60)) / 1000),
        cost: this.price
      }
    })
  },
  timer() {
    let now = new Date().getTime()
    let passTime = now - this.startTime

    let hours = Math.floor((passTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))
    let minutes = Math.floor((passTime % (1000 * 60 * 60)) / (1000 * 60))
    let seconds = Math.floor((passTime % (1000 * 60)) / 1000)

    let res = ''

    if (hours > 0) {
      res = res + hours + 'h'
    }
    if (minutes > 0) {
      res = res + minutes + 'm'
    }
    if (seconds > 0) {
      res = res + seconds + 's'
    }

    this.time = res
  },
  onShow() {
    this.getLocation()
    this.startTime = new Date().getTime()
    this.intervel = setInterval(() => {
      this.timer()
    }, 1000)

  },
}
</script>